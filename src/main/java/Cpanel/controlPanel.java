/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cpanel;

import static Main.IMainInterface.ErrorMsgLabel;
import brows.browser;
import brows.browserUI;
import database.Db;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ramo828
 */
public class controlPanel extends javax.swing.JFrame {

    private Db d = new Db();
    private static int myID = 0;

    public static void setMyID(int ID) {
        myID = ID;
    }

    /**
     * Creates new form controlPanel
     */
    public void downMsgBox() {
        try {
            String msg = d.getDataString(2, "SELECT * FROM settings");
            sendMsgWork.setText(msg);
        } catch (SQLException ex) {
            Logger.getLogger(browserUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void alert(String a, int i) {
        if (i == 1) {
            JOptionPane.showMessageDialog(null, a, ErrorMsgLabel, JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, a);
        }
    }

    private static int myJob() throws SQLException {
        Db d = new Db();
        d.init();
        String access = d.getDataString(12, "SELECT * FROM `users` WHERE id = " + String.valueOf(myID) + ";");
        return Integer.parseInt(access);
    }

    private static int ourJob(int ID) throws SQLException {
        Db d = new Db();
        d.init();
        String ouraccess = d.getDataString(12, "SELECT * FROM `users` WHERE id = " + String.valueOf(ID) + ";");
        return Integer.parseInt(ouraccess);
    }

    private static boolean setJob() {
        return true;
    }

    private static boolean equalJob(int ID) throws SQLException {
        if (myJob() > ourJob(ID)) {
            return true;
        } else if (myJob() == ourJob(ID)) {
            return false;
        } else {
            return false;
        }
    }

    private static boolean equalJob2(int bb) throws SQLException {
        if (myJob() >= bb) {
            return true;
        } else {
            return false;
        }
    }

    public void userLabel() throws SQLException {
        d.init();
        int myJobVar = myJob();
        String job[] = {"Sadə istifadəçi", "Menecer", "Baş Menecer", "Developper", "Developper"};
        int coin = d.getCoin(myID);
        String name = d.getDataString(6, myID, "users");
        String surname = d.getDataString(7, myID, "users");
        status.setText("#" + String.valueOf(myID) + " " + name + " " + surname + " " + job[myJobVar] + " " + String.valueOf(coin));
    }

    public controlPanel() {
        initComponents();
    }

    public void choise() {
        sechim.add("Istifadəçini aktivləşdir");
        sechim.add("Istifadəçini deaktivləşdir");
        sechim.add("Istifadeci sil");
        sechim.add("Istifadeçini blokla");
        sechim.add("Istifadeçini blokdan çıxar");
        sechim.add("Istifadeçi xəbərdarlıq");
        sechim.add("Istifadeçi xəbərdarlığını sil");
        sechim.add("Istifadəçi məlumatlarını göstər");

        choiseSts.add("Sadə istifadəçi");
        choiseSts.add("Menecer");
    }

    public void button_label() {
        cls_and_bns.setLabel("Təsdiq et");
        emr.setLabel("Təsdiq et");
        accept.setLabel("Təsdiq et");
        msgAccept.setLabel("Təsdiq et");

    }

    public void users() throws SQLException {
        d.init();
        for (int i = 1; i <= d.getUserCount(); i++) {
            list.add(Db.getDataString(1, "SELECT login FROM users WHERE id = " + String.valueOf(i)));
        }
    }

    public void init(boolean usersList) throws SQLException {
        if (usersList) {
            users();
            choise();
        }
        downMsgBox();
        userLabel();
        button_label();

    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list = new java.awt.List();
        emr = new java.awt.Checkbox();
        accept = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        warMsg = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sendMsgWork = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        sechim = new java.awt.Choice();
        msgAccept = new java.awt.Button();
        jLabel3 = new javax.swing.JLabel();
        regBonus = new javax.swing.JTextField();
        choiseSts = new java.awt.Choice();
        jScrollPane4 = new javax.swing.JScrollPane();
        closeMsg = new javax.swing.JTextArea();
        status = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        much = new javax.swing.JTextField();
        activateSts = new javax.swing.JToggleButton();
        cls_and_bns = new java.awt.Button();
        closed = new javax.swing.JCheckBox();
        prefSechim = new javax.swing.JComboBox<>();
        activate1 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        list.setBackground(java.awt.Color.orange);
        list.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        list.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        list.setForeground(new java.awt.Color(52, 68, 103));

        emr.setBackground(java.awt.Color.orange);
        emr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        emr.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        emr.setForeground(new java.awt.Color(52, 68, 103));
        emr.setLabel("checkbox1");

        accept.setBackground(java.awt.Color.orange);
        accept.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        accept.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        accept.setForeground(new java.awt.Color(52, 68, 103));
        accept.setLabel("button1");
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(217, 195, 230));

        warMsg.setBackground(new java.awt.Color(216, 182, 231));
        warMsg.setColumns(20);
        warMsg.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        warMsg.setRows(5);
        jScrollPane1.setViewportView(warMsg);

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel1.setText("Mesaj:");

        jScrollPane2.setBackground(new java.awt.Color(234, 205, 238));

        sendMsgWork.setBackground(new java.awt.Color(228, 190, 236));
        sendMsgWork.setColumns(20);
        sendMsgWork.setRows(5);
        jScrollPane2.setViewportView(sendMsgWork);

        jLabel2.setBackground(new java.awt.Color(234, 205, 238));
        jLabel2.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel2.setText("Prefix Mesajı:");

        sechim.setBackground(java.awt.Color.orange);
        sechim.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sechim.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        sechim.setForeground(new java.awt.Color(52, 68, 103));

        msgAccept.setBackground(java.awt.Color.orange);
        msgAccept.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        msgAccept.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        msgAccept.setForeground(new java.awt.Color(52, 68, 103));
        msgAccept.setLabel("button1");
        msgAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgAcceptActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel3.setText("Qeydiyyat bonusu: ");

        regBonus.setBackground(new java.awt.Color(251, 217, 252));
        regBonus.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        regBonus.setText("100");

        choiseSts.setBackground(java.awt.Color.orange);
        choiseSts.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        closeMsg.setBackground(new java.awt.Color(203, 180, 210));
        closeMsg.setColumns(20);
        closeMsg.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        closeMsg.setRows(5);
        jScrollPane4.setViewportView(closeMsg);

        status.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        status.setText("name");

        jButton1.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jButton1.setText("Yenilə");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel6.setText("İstifadəçinin balansını artır");

        jLabel7.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel7.setText("Nə qədər?");

        much.setBackground(new java.awt.Color(237, 183, 230));
        much.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        much.setText("0");

        activateSts.setText("Aktiv et");
        activateSts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateStsActionPerformed(evt);
            }
        });

        cls_and_bns.setBackground(java.awt.Color.orange);
        cls_and_bns.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cls_and_bns.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cls_and_bns.setForeground(new java.awt.Color(52, 68, 103));
        cls_and_bns.setLabel("button1");
        cls_and_bns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cls_and_bnsActionPerformed(evt);
            }
        });

        closed.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        closed.setText("Sistemi bağla");
        closed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closedActionPerformed(evt);
            }
        });

        prefSechim.setBackground(new java.awt.Color(244, 173, 44));
        prefSechim.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        prefSechim.setForeground(new java.awt.Color(248, 190, 9));
        prefSechim.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "055","099"}));
        prefSechim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefSechimActionPerformed(evt);
            }
        });

        activate1.setText("Aktiv et");
        activate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activate1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 20)); // NOI18N
        jLabel4.setText("Vəzifəsini dəyişdir");

        clear.setFont(new java.awt.Font("Cantarell", 1, 14)); // NOI18N
        clear.setText("Bütün xəbərdarlıq və blokları sil");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(76, 76, 76)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(342, 342, 342))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(list, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sechim, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emr, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(69, 69, 69)
                                        .addComponent(activate1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(much, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(accept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(276, 276, 276)
                                .addComponent(jSeparator1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(regBonus, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                .addComponent(closed, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                .addComponent(cls_and_bns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prefSechim, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(msgAccept, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(choiseSts, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(activateSts, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(status)
                            .addComponent(jButton1))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(emr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sechim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1)
                                .addGap(11, 11, 11)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(activateSts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(activate1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(closed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(prefSechim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(regBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(cls_and_bns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(much, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(choiseSts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(accept, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(msgAccept, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(clear, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static int coin(int ID) throws SQLException {
        Db d = new Db();
        d.init();
        int coins = d.getDataInt(8, ID, "users");
        return coins;
    }

    private void deleteUser(int ID) throws SQLException {
        d.init();
        if (equalJob(ID)) {
            String dq = "DELETE FROM `users` WHERE `id` = ?;";
            if (d.query(dq, ID)) {
                alert("Istifadəçi silindi", 0);
            }
        } else {
            alert("Sizin vezifeniz silmek istediyiniz isdifadəçidən aşağı və ya bərabərdir", 1);
        }
    }


    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
        d.init();
        if (emr.getState()) {
            if (sechim.getSelectedIndex() == -1) {
                alert("Istifadəçi düzgün seçilməyib", 0);
            } else if (sechim.getSelectedIndex() == 0) {
                try {
                    if (equalJob2(2)) {
                        if (d.query("UPDATE users SET status=? WHERE id =" + Integer.valueOf(list.getSelectedIndex() + 1), 1)) {
                            alert("Istifadəçi aktivləşdirildi", 0);
                        }
                    } else {
                        alert("Sizin vəzifəniz istifadəçinin vəzifəsindən aşağı və ya ona bərabərdir", 0);

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 1) {
                try {
                    if (equalJob2(2)) {
                        if (d.query("UPDATE users SET status=? WHERE id =" + Integer.valueOf(list.getSelectedIndex() + 1), 0)) {
                            alert("İstifadəçi deaktivleşdirildi", 0);
                        }
                    } else {
                        alert("Sizin vəzifəniz istifadəçinin vəzifəsindən aşağı və ya ona bərabərdir", 0);

                    }
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 2) {
                try {
                    deleteUser(list.getSelectedIndex() + 1);
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 3) {
                int idx = list.getSelectedIndex() + 1;
                try {
                    if (equalJob(idx)) {
                        d.init();
                        if (d.blockUser(idx)) {
                            alert("Istiidadeci bloklandi", 0);
                        } else {
                            alert("Istifadeci bloklana bilmedi", 0);
                        }
                    } else {
                        alert("Sizin vəzifəniz istifadəçinin vəzifəsindən aşağı və ya ona bərabərdir", 0);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 4) {
                int idx = list.getSelectedIndex() + 1;
                try {
                    if (equalJob(idx)) {
                        d.init();
                        if (d.unblockUser(idx)) {
                            alert("Istiidadəçi bloklandan çıxarıldı", 0);

                        } else {
                            alert("Istifadəçi bloklanmayıb", 0);
                        }

                    } else {
                        alert("Sizin vəzifəniz istifadəçinin vəzifəsindən aşağı və ya ona bərabərdir", 0);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 5) {
                int idx = list.getSelectedIndex() + 1;
                try {
                    if (equalJob2(2)) {
                        d.init();
                        if (d.warUser(idx, warMsg.getText())) {
                            alert("Istiidadəçiyə xəbərdarlıq edildi", 0);

                        } else {
                            alert("Istifadəçiyə xəbrdarlıq edilmədi", 0);
                        }

                    } else {
                        alert("Sizin vəzifəniz istifadəçinin vəzifəsindən aşağı və ya ona bərabərdir", 0);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 6) {
                int idx = list.getSelectedIndex() + 1;
                try {
                    if (equalJob2(2)) {
                        d.init();
                        if (d.unWarUser(idx)) {
                            alert("Istiidadəçiyə xəbərdarlıq silindi", 0);

                        } else {
                            alert("Istifadəçiyə xəbrdarlıq edilmədi", 0);
                        }

                    } else {
                        alert("Sizin vəzifəniz istifadəçinin vəzifəsindən aşağı və ya ona bərabərdir", 0);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (sechim.getSelectedIndex() == 7) {
                int idx = list.getSelectedIndex() + 1;
                showUser su = new showUser();
                su.setMyId(idx);
                try {
                    su.setJob(ourJob(idx));
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    su.init();
                } catch (SQLException ex) {
                    Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                su.setVisible(true);
            }
        }
        if (activate1.isSelected()) {
            int coin = 0;
            browser b = new browser();
            int index = list.getSelectedIndex() + 1;
            int sendCoin = Integer.parseInt(much.getText());

            try {
                if (equalJob2(2)) {
                    if (myID != index) {
                        coin = coin(index);
                        if (d.setCoin(index, coin + sendCoin)) {
                            d.inHesabat(index, myID,sendCoin);
                            alert(d.getLogin(index) + "'in Balansı Artırıldı", 0);

                        }
                    } else {
                        alert("Istifadəçi özünə coin vura bilməz!", 0);
                    }
                } else {
                    alert("Sadece baş menecer hesabı artıra bilər!", 1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_acceptActionPerformed

    private void msgAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgAcceptActionPerformed
        int index = choiseSts.getSelectedIndex();
        if (activateSts.isSelected()) {
            try {
                if (equalJob2(2)) {
                    if (equalJob(list.getSelectedIndex() + 1)) {
                        boolean ok = d.query("UPDATE users SET vezife=? WHERE id =" + Integer.valueOf(list.getSelectedIndex() + 1), index);
                        if (ok) {
                            alert("Vəzifə dəyişdirildi", 0);
                        } else {
                            alert("Vəzifə dəyişdirilə bilmədi", 0);
                        }
                    } else {
                        alert(" öz vəzifənizi dəyişə bilməzsiniz", 0);
                    }
                } else {
                    alert("Sizin vəzifəniz aşağı və ya bərabərdir", 0);

                }
            } catch (SQLException ex) {
                Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (!sendMsgWork.getText().isEmpty()) {
            if (d.querySettings(prefSechim.getSelectedIndex(), sendMsgWork.getText())) {
                alert("Default mesaj deyisdirildi!", 0);
            } else {
                alert("Problem yarandi", 0);
            }
    }//GEN-LAST:event_msgAcceptActionPerformed
    }

    private void cls_and_bnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cls_and_bnsActionPerformed
        d.init();
        try {
            if (equalJob2(4)) {
                if (!regBonus.getText().isEmpty()) {
                    if (d.querySettings(0, Integer.parseInt(regBonus.getText()))) {
                        alert("Qeydiyyat bonusu deyisdirildi!", 0);
                    }
                }
            } else {
                alert("Sadece developper dəyişdirə bilər", myID);
            }
        } catch (SQLException ex) {
            Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cls_and_bnsActionPerformed


    private void activateStsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateStsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activateStsActionPerformed

    private void closedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closedActionPerformed
        d.init();
        if (closed.isSelected()) {
            try {
                if (equalJob2(3)) {
                    if (d.querySettings(1, 1) && d.querySettings(2, closeMsg.getText())) {
                        closed.setText("Sistemi aç");
                        alert("Sistem baglandi!", 0);
                    }
                } else {
                    alert("Sadece developper dəyişdirə bilər", myID);

                }
            } catch (SQLException ex) {
                Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                if (equalJob2(3)) {

                    if (d.querySettings(1, 0)) {
                        closed.setText("Sistem bagla");
                        alert("Sistem açıldı!", 0);
                    }
                } else {
                    alert("Sadece developper dəyişdirə bilər", myID);

                }
            } catch (SQLException ex) {
                Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_closedActionPerformed

    private void prefSechimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefSechimActionPerformed
        d.init();
        if (prefSechim.getSelectedIndex() == 0) {
            downMsgBox();
        } else if (prefSechim.getSelectedIndex() == 1) {
            try {
                String pref099 = d.getDataString(3, "SELECT * FROM settings");
                sendMsgWork.setText(pref099);

            } catch (SQLException ex) {
                Logger.getLogger(browserUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_prefSechimActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.gc();
        try {
            init(false);
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void activate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activate1ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        d.init();
        try {
            if (equalJob2(3)) {
                if (d.norQuery("TRUNCATE TABLE user_value")) {
                    alert("Bütün xəbərdarlıq və blok olunan istifadəçilərin siyahısı silindi", 0);
                }
            } else {
                alert("Sadece developper dəyişdirə bilər", myID);

            }

// TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(controlPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(controlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(controlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(controlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(controlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new controlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button accept;
    private javax.swing.JToggleButton activate1;
    private javax.swing.JToggleButton activateSts;
    private java.awt.Choice choiseSts;
    private javax.swing.JButton clear;
    private javax.swing.JTextArea closeMsg;
    private javax.swing.JCheckBox closed;
    private java.awt.Button cls_and_bns;
    private java.awt.Checkbox emr;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private java.awt.List list;
    private java.awt.Button msgAccept;
    private javax.swing.JTextField much;
    private javax.swing.JComboBox<String> prefSechim;
    private javax.swing.JTextField regBonus;
    private static java.awt.Choice sechim;
    private javax.swing.JTextArea sendMsgWork;
    private javax.swing.JLabel status;
    private javax.swing.JTextArea warMsg;
    // End of variables declaration//GEN-END:variables
}
