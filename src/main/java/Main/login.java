/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import javax.swing.JOptionPane;
import database.Db;
import java.awt.AWTException;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import util.io.file;

/**
 *
 * @author ramo828
 */
public class login extends javax.swing.JFrame implements database.IQueries, IMainInterface {

    /**
     * Creates new form login
     */
    private static boolean status = false;
    private Db d = new Db();

    public login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenuBar6 = new javax.swing.JMenuBar();
        jMenu10 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();
        jMenuBar7 = new javax.swing.JMenuBar();
        jMenu12 = new javax.swing.JMenu();
        jMenu13 = new javax.swing.JMenu();
        jMenu14 = new javax.swing.JMenu();
        jMenuBar8 = new javax.swing.JMenuBar();
        jMenu15 = new javax.swing.JMenu();
        jMenu16 = new javax.swing.JMenu();
        jMenu17 = new javax.swing.JMenu();
        jMenu18 = new javax.swing.JMenu();
        jMenuBar9 = new javax.swing.JMenuBar();
        jMenu19 = new javax.swing.JMenu();
        jMenu20 = new javax.swing.JMenu();
        jMenuBar10 = new javax.swing.JMenuBar();
        jMenu21 = new javax.swing.JMenu();
        jMenu22 = new javax.swing.JMenu();
        jMenuBar11 = new javax.swing.JMenuBar();
        jMenu23 = new javax.swing.JMenu();
        jMenu24 = new javax.swing.JMenu();
        jMenuBar12 = new javax.swing.JMenuBar();
        jMenu25 = new javax.swing.JMenu();
        jMenu26 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pass_show = new javax.swing.JCheckBox();
        password_f = new javax.swing.JPasswordField();
        login_f = new javax.swing.JTextField();
        login = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        register_button = new javax.swing.JButton();
        db_status = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        jMenu4.setText("File");
        jMenuBar3.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar3.add(jMenu5);

        jMenu6.setText("File");
        jMenuBar4.add(jMenu6);

        jMenu7.setText("Edit");
        jMenuBar4.add(jMenu7);

        jMenu8.setText("File");
        jMenuBar5.add(jMenu8);

        jMenu9.setText("Edit");
        jMenuBar5.add(jMenu9);

        jMenu10.setText("File");
        jMenuBar6.add(jMenu10);

        jMenu11.setText("Edit");
        jMenuBar6.add(jMenu11);

        jMenu12.setText("File");
        jMenuBar7.add(jMenu12);

        jMenu13.setText("Edit");
        jMenuBar7.add(jMenu13);

        jMenu14.setText("jMenu14");

        jMenu15.setText("File");
        jMenuBar8.add(jMenu15);

        jMenu16.setText("Edit");
        jMenuBar8.add(jMenu16);

        jMenu17.setText("jMenu17");

        jMenu18.setText("jMenu18");

        jMenu19.setText("File");
        jMenuBar9.add(jMenu19);

        jMenu20.setText("Edit");
        jMenuBar9.add(jMenu20);

        jMenu21.setText("File");
        jMenuBar10.add(jMenu21);

        jMenu22.setText("Edit");
        jMenuBar10.add(jMenu22);

        jMenu23.setText("File");
        jMenuBar11.add(jMenu23);

        jMenu24.setText("Edit");
        jMenuBar11.add(jMenu24);

        jMenu25.setText("File");
        jMenuBar12.add(jMenu25);

        jMenu26.setText("Edit");
        jMenuBar12.add(jMenu26);

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mesuk v1.0");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setText("Login: ");

        jLabel2.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel2.setText("Parol: ");

        pass_show.setBackground(new java.awt.Color(46, 35, 36));
        pass_show.setText("Şifrəni göstər");
        pass_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass_showActionPerformed(evt);
            }
        });

        password_f.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                password_fKeyPressed(evt);
            }
        });

        login_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_fActionPerformed(evt);
            }
        });
        login_f.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                login_fKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                login_fKeyReleased(evt);
            }
        });

        login.setBackground(new java.awt.Color(130, 138, 133));
        login.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        login.setForeground(new java.awt.Color(12, 12, 21));
        login.setText("Daxil Ol");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(143, 155, 212));
        jLabel3.setFont(new java.awt.Font("Caladea", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(163, 209, 231));
        jLabel3.setText("(c) Created by Ramiz Mammadli                               2021");

        register_button.setBackground(new java.awt.Color(94, 95, 103));
        register_button.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        register_button.setForeground(new java.awt.Color(244, 3, 3));
        register_button.setText("Qeyd Ol");
        register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_buttonActionPerformed(evt);
            }
        });

        db_status.setForeground(new java.awt.Color(5, 248, 79));
        db_status.setText("test");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/rsz_1logi.png"))); // NOI18N
        jLabel4.setText(".");

        jMenu3.setAction(login.getAction());
        jMenu3.setText("Çıxış");
        jMenu3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMenu3KeyPressed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(pass_show))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(22, 22, 22)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(login_f)
                                            .addComponent(password_f)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(47, 47, 47)
                                                .addComponent(register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(db_status)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(db_status)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(login_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(password_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addComponent(pass_show))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static int upServer() throws SQLException {

        String upServer = Db.getDataString(9, "Select * from settings");
        if (upServer == null) {
            alert("xeta", 0);
        }
        return Integer.parseInt(upServer);
    }


    private void pass_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass_showActionPerformed
        if (pass_show.isSelected()) {
            password_f.setEchoChar((char) 0);
        } else {
            password_f.setEchoChar('*');
        }
    }//GEN-LAST:event_pass_showActionPerformed

    private void serverUpdate() throws SQLException, IOException {
        String Server = Db.getDataString(10, "Select * from settings");
        if (upServer() == 1) {
            String settingFile = "settings";
            file f = new file();
            f.setUrl(settingFile);
            File fd = f.fileInit();
            f.writeFile(fd, Server);
            System.out.println("VB'dan server melumatlari alindi");
        }
    }

    private static void update() throws URISyntaxException, IOException, SQLException {
        Db d = new Db();
        d.init();
        String updateUrl = d.getDataString(8, settingQuery);                   //  VB-den melumatlari al
        int update = JOptionPane.showConfirmDialog(null, "Programın yeni versiyasi mövcuddur. yenilənsin?",
                "Diqqət!", JOptionPane.YES_NO_OPTION);
        if (update == JOptionPane.YES_OPTION) {
            if (Desktop.isDesktopSupported() && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
                Desktop.getDesktop().browse(new URI(updateUrl));
            }
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.exit(0);
        }
    }

    public void exit() {
        System.exit(1);
    }

    public boolean blockID(String login) throws SQLException {
        Db d = new Db();
        d.init();
        if (login.length() <= 3) {
            if (d.executeQuery("Select * from user_value where block_id=?", Integer.parseInt(login))) {
                return true;
            } else {
                return false;
            }
        } else {
            if (d.executeQuery("Select * from user_value where block_id=?", d.getID(login))) {
                return true;
            } else {
                return false;
            }

        }
    }

    public boolean warningID(String login) throws SQLException {
        Db d = new Db();
        d.init();
        if (login.length() <= 3) {
            if (d.executeQuery("Select * from user_value where war_id=?", Integer.parseInt(login))) {
                return true;
            } else {
                return false;
            }
        } else {
            if (d.executeQuery("Select * from user_value where war_id=?", d.getID(login))) {
                return true;
            } else {
                return false;
            }

        }
    }

    public void about() {
        JOptionPane.showMessageDialog(null, author);
    }


    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        Db d = new Db();
        String login_tf = login_f.getText();
        try {
            if (blockID(login_tf)) {
                alert("Hesabiniz bloklanib", 0);
            } else if (warningID(login_tf)) {
                d.init();
                if (login_tf.length() > 3) {
                    String warMsg = d.getDataString(4, "Select * from user_value where war_id=" + String.valueOf(d.getID(login_tf)));
                    alert(warMsg, 0);

                    login();
                    
                } else {
                    String warMsg = d.getDataString(4, "Select * from user_value where war_id=" + Integer.valueOf(login_tf));
                    alert(warMsg, 0);

                    login();
                }
            } else {
                try {

                    login();
                } catch (SQLException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loginActionPerformed

    private void login() throws SQLException, URISyntaxException, IOException {
                    serverUpdate();
        Db d = new Db();                                                 // Database clsini calistir
        access a = new access();                                         // Access clasini calisdir
        d.init();                                                        // VB aktiv et
        String login_tf = login_f.getText();                             // Login TF - ni Stringe cevir
        String password_tf = password_f.getText();                       // Parol TF - ni Stringe cevir
        String acc = d.getDataString(4, settingQuery);                   //  VB-den melumatlari al
        String fixMsg = d.getDataString(5, settingQuery);                // VB-dan mesaji al
        String update = d.getDataString(7, settingQuery);                //  VB-den melumatlari al

        if (login_tf.length() <= 3) {                                    // login 3den kicik yada 3e bearberdise asagidaki emrleri icra et
            if (Integer.parseInt(acc) == 1) {                            // eger asagidaki deyerler 1 e beraberdise asagidaki emrleri icra et
                alert(fixMsg, 1);                                        // Mesaji goster
                System.exit(1);                                          // Sistemden cix
            }
            if (Integer.parseInt(update) == 1) {                         // eger acc deyeri 2 beraberdise asagidaki emrleri icra et
                update();
            }
        }                                                    // mesaji goster

        if (d.loginSystem(login_tf, password_tf, d.login) || d.loginSystem(login_tf, password_tf, d.ID)) { //ID ve ya Login uygun gelirse
            a.setID(d.getID(login_tf));
            if (login_tf.length() <= 3) {                                // Eger login 3e bearaber yadaki 3den kicikdirse
                String LOGIN = d.getLogin(Integer.parseInt(login_tf));   // ID olaraq qebul ele ve emrleri icra et
                int ID = d.getID(LOGIN);                                 // ID logine cevir ve sonra set etmek ucun aldigin ID-ni
                a.setID(ID);                                             // accese set et          }
            }
            a.init();                                                    // Access init calisdir

            a.setVisible(true);                                          // Access penceresini goster
            this.setVisible(false);                                      // login pencereseini gizle
        } else {                                                         // eger sisteme girmeye icaze verilmese
            alert(accessDeniedMsg, 1);                                   // xeta mesajini goster
        }
    }


    private void jMenu3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMenu3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
            System.exit(1);
    }//GEN-LAST:event_jMenu3KeyPressed

    private void register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_buttonActionPerformed
        try {
            registerMeth();
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_register_buttonActionPerformed

    public void registerMeth() throws SQLException {
        Db d = new Db();
        d.init();
        String acc = d.getDataString(4, settingQuery);
        String fixMsg = d.getDataString(5, settingQuery);
        if (Integer.parseInt(acc) == 1) {
            alert(fixMsg, 1);
            System.exit(1);
        }
        new register().setVisible(true);
    }


    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            try {
            login();
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formKeyPressed

    private void login_fKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_login_fKeyReleased

    }//GEN-LAST:event_login_fKeyReleased

    private void login_fKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_login_fKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String login_tf = login_f.getText();
            try {
                if (blockID(login_tf)) {
                    alert("Hesabiniz bloklanib", 1);
                } else if (warningID(login_tf)) {
                    d.init();
                    if (login_tf.length() > 3) {
                        String warMsg = d.getDataString(4, "Select * from user_value where war_id=" + String.valueOf(d.getID(login_tf)));
                        alert(warMsg, 0);
                        login();

                    } else {
                        String warMsg = d.getDataString(4, "Select * from user_value where war_id=" + Integer.valueOf(login_tf));
                        alert(warMsg, 0);
                        login();
                    }
                } else {
                    try {
                        login();
                    } catch (SQLException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (URISyntaxException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            try {
                tops t = new tops();
                t.setVisible(true);
                t.init();
            } catch (IOException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_login_fKeyPressed

    private void password_fKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_password_fKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String login_tf = login_f.getText();
            try {
                if (blockID(login_tf)) {
                    alert("Hesabiniz bloklanib", 0);
                } else if (warningID(login_tf)) {
                    d.init();
                    if (login_tf.length() > 3) {
                        String warMsg = d.getDataString(4, "Select * from user_value where war_id=" + String.valueOf(d.getID(login_tf)));
                        alert(warMsg, 0);
                        login();

                    } else {
                        String warMsg = d.getDataString(4, "Select * from user_value where war_id=" + Integer.valueOf(login_tf));
                        alert(warMsg, 0);
                        login();
                    }
                } else {
                    try {
                        login();
                    } catch (SQLException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (URISyntaxException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_password_fKeyPressed

    private void login_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_fActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_login_fActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, SQLException {

        String settingFile = "settings";
        file f = new file();
        f.setUrl(settingFile);
        File fd = f.fileInit();
        if (f.existFile(fd)) {
            System.out.println("Ayar fayli var!");
        } else {
            f.createFile(fd);
            f.writeFile(fd, "c2VydmVyLWJha2NlbGwuZGRucy5uZXQsMzMwNixyb290LHJhbWl6MTIzLHRlc3RfcHJvamVjdCA=");
        }

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
                try {
                    labelEdit();
                } catch (AWTException ex) {
                    Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public static void setStatus(boolean sts) {
        status = sts;
    }

    public static void labelEdit() throws AWTException {
        Db d = new Db();
        Robot b = new Robot();
        d.init();
        if (d.isStatus_db()) {
            db_status.setForeground(Color.green);
            db_status.setText(connectStatusMsg[0]);
        } else if (status) {
            db_status.setForeground(Color.green);
            db_status.setText(connectStatusMsg[0]);
        } else {
            db_status.setForeground(Color.red);
            db_status.setText(connectStatusMsg[1]);
            b.delay(10000);
            alert("Internet bağlantısı yoxdur", 1);
        }
    }

    public static void alert(String a, int i) {
        if (i == 1) {
            JOptionPane.showMessageDialog(null, a, ErrorMsgLabel, JOptionPane.ERROR_MESSAGE);
            //JOptionPane.
        } else {
            JOptionPane.showMessageDialog(null, a);
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel db_status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu14;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenu jMenu16;
    private javax.swing.JMenu jMenu17;
    private javax.swing.JMenu jMenu18;
    private javax.swing.JMenu jMenu19;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu20;
    private javax.swing.JMenu jMenu21;
    private javax.swing.JMenu jMenu22;
    private javax.swing.JMenu jMenu23;
    private javax.swing.JMenu jMenu24;
    private javax.swing.JMenu jMenu25;
    private javax.swing.JMenu jMenu26;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar10;
    private javax.swing.JMenuBar jMenuBar11;
    private javax.swing.JMenuBar jMenuBar12;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuBar jMenuBar6;
    private javax.swing.JMenuBar jMenuBar7;
    private javax.swing.JMenuBar jMenuBar8;
    private javax.swing.JMenuBar jMenuBar9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton login;
    private javax.swing.JTextField login_f;
    private javax.swing.JCheckBox pass_show;
    private javax.swing.JPasswordField password_f;
    private javax.swing.JButton register_button;
    // End of variables declaration//GEN-END:variables

}
